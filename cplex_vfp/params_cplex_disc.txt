## Template for parameter configuration file for JRace, Java implementation
## of racing based automatic algorithm configurator.
## Developed by Zhi Eric Yuan. 
##
## The format is one parameter per line. Each line contains:
##
## 1: Name of the parameter. An unquoted alphanumeric string,
##    example: ants. Note that the parameter name must be unique. 
## 2: Switch to pass the parameter. A quoted (possibly empty) string.
##    If the switch and the value must be separated, add a space at
##    the end of the string. Example: "--value ", or "--value=", 
##    or "--choice1". 
## 3: Type. An unquoted single letter, among 
##     i: integer, c: categorical, r: real.
## 4: For c: all possible values; for i,r: minimum and maximum
##    values. A variable number of numbers or unquoted strings within
##    square bracket "[]" separated by commas.
## 5: Optionally, a default parameter value can be given as an unquoted string 
##    surrounded with a brace "{}". Example: {1e-4}
## 6: Optionally, a conditional parameter will be appended, with a character '|' 
##    followed by the parent parameter name, 
##    followed by a set of values enclosed in square bracket.
##    Example: | mode [acs, ras]
##
# 1:            2:               3:   4:	5:	6:
barrier_limits_growth "barrier_limits_growth " c [1e+6,1e+8,1e+10,1e+12,1e+14] {1e+12} 
barrier_algorithm "barrier_algorithm " c [0,1,2,3] {0} 
barrier_crossover "barrier_crossover " c [-1,0,1,2] {0} 
barrier_limits_corrections "barrier_limits_corrections " c [-1,0,1,4,16,64] {-1} 
barrier_ordering "barrier_ordering " c [0,1,2,3] {0} 
barrier_startalg "barrier_startalg " c [1,2,3,4] {1} 
emphasis_memory "emphasis_memory " c [yes,no] {no} 
emphasis_mip "emphasis_mip " c [0,1,2,3,4] {0} 
emphasis_numerical "emphasis_numerical " c [yes,no] {no} 
feasopt_mode "feasopt_mode " c [0,1,2,3,4,5] {0} 
lpmethod "lpmethod " c [0,1,2,3,4,5,6] {0} 
mip_cuts_cliques "mip_cuts_cliques " c [-1,0,1,2,3] {0} 
mip_cuts_covers "mip_cuts_covers " c [-1,0,1,2,3] {0} 
mip_cuts_disjunctive "mip_cuts_disjunctive " c [-1,0,1,2,3] {0} 
mip_cuts_flowcovers "mip_cuts_flowcovers " c [-1,0,1,2] {0} 
mip_cuts_gomory "mip_cuts_gomory " c [-1,0,1,2] {0} 
mip_cuts_gubcovers "mip_cuts_gubcovers " c [-1,0,1,2] {0} 
mip_cuts_implied "mip_cuts_implied " c [-1,0,1,2] {0} 
mip_cuts_mcfcut "mip_cuts_mcfcut " c [-1,0,1,2] {0} 
mip_cuts_mircut "mip_cuts_mircut " c [-1,0,1,2] {0} 
mip_cuts_pathcut "mip_cuts_pathcut " c [-1,0,1,2] {0} 
mip_cuts_zerohalfcut "mip_cuts_zerohalfcut " c [-1,0,1,2] {0} 
mip_limits_aggforcut "mip_limits_aggforcut " c [0,1,2,3,5,10] {3} 
mip_limits_cutsfactor "mip_limits_cutsfactor " c [1,2,4,8,16] {4} 
mip_limits_cutpasses "mip_limits_cutpasses " c [-1,0,1,4,16,64] {0} 
mip_limits_gomorycand "mip_limits_gomorycand " c [50,100,200,400,800] {200} 
mip_limits_gomorypass "mip_limits_gomorypass " c [0,1,4,16,64] {0} 
mip_limits_strongcand "mip_limits_strongcand " c [2,5,10,20,40] {10} | mip_strategy_variableselect [3]
mip_limits_strongit "mip_limits_strongit " c [0,1,4,16,64] {0} | mip_strategy_variableselect [3]
mip_limits_submipnodelim "mip_limits_submipnodelim " c [125,250,500,1000,2000] {500} 
mip_ordertype "mip_ordertype " c [0,1,2,3] {0} 
mip_strategy_backtrack "mip_strategy_backtrack " c [0.9,0.99,0.999,0.9999,0.99999,0.999999] {0.9999} 
mip_strategy_bbinterval "mip_strategy_bbinterval " c [0,2,4,7,15,30] {7} 
mip_strategy_branch "mip_strategy_branch " c [-1,0,1] {0} 
mip_strategy_dive "mip_strategy_dive " c [0,1,2,3] {0} 
mip_strategy_file "mip_strategy_file " c [0,1] {1} 
mip_strategy_fpheur "mip_strategy_fpheur " c [-1,0,1,2] {0} 
mip_strategy_heuristicfreq "mip_strategy_heuristicfreq " c [-1,0,5,10,20,40,80] {0} 
mip_strategy_lbheur "mip_strategy_lbheur " c [yes,no] {no} 
mip_strategy_nodeselect "mip_strategy_nodeselect " c [0,1,2,3] {1} 
mip_strategy_order "mip_strategy_order " c [yes,no] {yes} | mip_ordertype [1,2,3]
mip_strategy_presolvenode "mip_strategy_presolvenode " c [-1,0,1,2] {0} 
mip_strategy_probe "mip_strategy_probe " c [-1,0,1,2,3] {0} 
mip_strategy_rinsheur "mip_strategy_rinsheur " c [-1,0,5,10,20,40,80] {0} 
mip_strategy_search "mip_strategy_search " c [0,1,2] {0} 
mip_strategy_startalgorithm "mip_strategy_startalgorithm " c [0,1,2,3,4,5,6] {0} 
mip_strategy_subalgorithm "mip_strategy_subalgorithm " c [0,1,2,3,4,5] {0} 
mip_strategy_variableselect "mip_strategy_variableselect " c [-1,0,1,2,3,4] {0} 
network_netfind "network_netfind " c [1,2,3] {2} 
network_pricing "network_pricing " c [0,1,2] {0} 
perturbation_constant "perturbation_constant " c [1e-8,1e-7,1e-6,1e-5,1e-4] {1e-6} | simplex_perturbation_switch [yes]
preprocessing_aggregator "preprocessing_aggregator " c [-1,0,1,4,16,64] {-1} 
preprocessing_boundstrength "preprocessing_boundstrength " c [-1,0,1] {-1} 
preprocessing_coeffreduce "preprocessing_coeffreduce " c [0,1,2] {2} 
preprocessing_dependency "preprocessing_dependency " c [-1,0,1,2,3] {-1} 
preprocessing_dual "preprocessing_dual " c [-1,0,1] {0} 
preprocessing_fill "preprocessing_fill " c [2,5,10,20,40] {10} 
preprocessing_linear "preprocessing_linear " c [0,1] {1} 
preprocessing_numpass "preprocessing_numpass " c [-1,0,1,4,16,64] {-1} 
preprocessing_reduce "preprocessing_reduce " c [0,1,2,3] {3} 
preprocessing_relax "preprocessing_relax " c [-1,0,1] {-1} 
preprocessing_repeatpresolve "preprocessing_repeatpresolve " c [-1,0,1,2,3] {-1} 
preprocessing_symmetry "preprocessing_symmetry " c [-1,0,1,2,3,4,5] {-1} 
read_scale "read_scale " c [-1,0,1] {0} 
sifting_algorithm "sifting_algorithm " c [0,1,2,3,4] {0} 
simplex_crash "simplex_crash " c [-1,0,1] {1} 
simplex_dgradient "simplex_dgradient " c [0,1,2,3,4,5] {0} 
simplex_limits_perturbation "simplex_limits_perturbation " c [0,1,4,16,64] {0} 
simplex_limits_singularity "simplex_limits_singularity " c [2,5,10,20,40] {10} 
simplex_perturbation_switch "simplex_perturbation_switch " c [no,yes] {no} 
simplex_pgradient "simplex_pgradient " c [-1,0,1,2,3,4] {0} 
simplex_pricing "simplex_pricing " c [0,1,4,16,64] {0} 
simplex_refactor "simplex_refactor " c [0,4,16,64,256] {0} 
simplex_tolerances_markowitz "simplex_tolerances_markowitz " c [0.0001,0.001,0.01,0.1,0.5] {0.01} 
